name: Deploy Twitter Sentiment

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  RG_NAME: "twitterKubeCon"
  LOCATION: "eastus"
  DAPR_VERSION: "1.7.2"
  K8S_VERSION: "1.23.5"

jobs:
  deploy:
    name: deployTwitterSentinment
    runs-on: ubuntu-latest
    steps:
    - name: checkout main branch
      uses: actions/checkout@v2

    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Bicep
    - name: Deploy infrastructure
      id: azure-deployment
      shell: pwsh
      run: |
        $deployment = $(az deployment sub create --name ${{ env.RG_NAME }} `
          --location ${{ env.LOCATION }} `
          --template-file ./iac/main.bicep `
          --parameters location=${{ env.LOCATION }} `
          --parameters rgName=${{ env.RG_NAME }} `
          --parameters k8sversion=${{ env.K8S_VERSION }} `
          --output json) | ConvertFrom-Json
        # Get all the outputs
        Write-Output "::set-output name=aksName::$($deployment.properties.outputs.aksName.value)"
        Write-Output "::set-output name=storageAccountKey::$($deployment.properties.outputs.storageAccountKey.value)"
        Write-Output "::set-output name=serviceBusEndpoint::$($deployment.properties.outputs.serviceBusEndpoint.value)"
        Write-Output "::set-output name=storageAccountName::$($deployment.properties.outputs.storageAccountName.value)"
        Write-Output "::set-output name=cognitiveServiceKey::$($deployment.properties.outputs.cognitiveServiceKey.value)"
        Write-Output "::set-output name=cognitiveServiceEndpoint::$($deployment.properties.outputs.cognitiveServiceEndpoint.value)"
      working-directory: ./twitter-sentiment-processor/demos/demo3   
  
    - name: Install Dapr via AKS Extension
      run: |
        az extension add --name k8s-extension

        az k8s-extension create --cluster-type managedClusters \
          --cluster-name ${{ steps.azure-deployment.outputs.aksName }} \
          --resource-group ${{ env.RG_NAME }} \
          --name daprK8s\
          --extension-type Microsoft.Dapr \
          --auto-upgrade-minor-version false \
          --version ${{ env.DAPR_VERSION }} \
          --only-show-errors
